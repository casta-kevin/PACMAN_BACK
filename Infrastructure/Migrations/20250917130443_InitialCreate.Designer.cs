// <auto-generated />
using System;
using Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(PacmanDbContext))]
    [Migration("20250917130443_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entity.GameSession", b =>
                {
                    b.Property<int>("GameSessionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("GameSessionId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GameSessionId"));

                    b.Property<int>("MaxLevelReached")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT")
                        .HasDefaultValue(1)
                        .HasColumnName("MaxLevelReached");

                    b.Property<DateTime>("PlayedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME2")
                        .HasColumnName("PlayedAt")
                        .HasDefaultValueSql("SYSDATETIME()");

                    b.Property<int>("PlayerId")
                        .HasColumnType("int")
                        .HasColumnName("PlayerId");

                    b.Property<int>("Score")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT")
                        .HasDefaultValue(0)
                        .HasColumnName("Score");

                    b.HasKey("GameSessionId");

                    b.HasIndex("PlayedAt")
                        .HasDatabaseName("IX_GameSessions_PlayedAt");

                    b.HasIndex("PlayerId")
                        .HasDatabaseName("IX_GameSessions_PlayerId");

                    b.HasIndex("Score")
                        .HasDatabaseName("IX_GameSessions_Score");

                    b.ToTable("GameSessions", (string)null);
                });

            modelBuilder.Entity("Domain.Entity.Player", b =>
                {
                    b.Property<int>("PlayerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PlayerId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PlayerId"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME2")
                        .HasColumnName("CreatedAt")
                        .HasDefaultValueSql("SYSDATETIME()");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR(50)")
                        .HasColumnName("Username");

                    b.HasKey("PlayerId");

                    b.HasIndex("Username")
                        .IsUnique()
                        .HasDatabaseName("IX_Players_Username");

                    b.ToTable("Players", (string)null);
                });

            modelBuilder.Entity("Domain.Entity.GameSession", b =>
                {
                    b.HasOne("Domain.Entity.Player", "Player")
                        .WithMany("GameSessions")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_GameSessions_Players_PlayerId");

                    b.Navigation("Player");
                });

            modelBuilder.Entity("Domain.Entity.Player", b =>
                {
                    b.Navigation("GameSessions");
                });
#pragma warning restore 612, 618
        }
    }
}
